package com.example.visuallithuanian.constants

import com.example.visuallithuanian.R

object RightsSingleton {

    val hashMapRights = HashMap<String, Triple<String, Int, Int>>()

    init {
        hashMapRights["clues"] = Triple("įkalčiai", R.drawable.clue, R.raw.clues)
        hashMapRights["summons"] = Triple("teismo šaukimas", R.drawable.summons, R.raw.summons)
        hashMapRights["false testimony"] = Triple("melagingi parodymai", R.drawable.falsetestimony, R.raw.falsetestimony)
        hashMapRights["lawyer"] = Triple("advokatas", R.drawable.lawyer, R.raw.lawyer)
        hashMapRights["Sue"] = Triple("iškelti bylą", R.drawable.sue, R.raw.sue)
        hashMapRights["civil law"] = Triple("civilinis įstatymas", R.drawable.civillaw, R.raw.civillaw)
        hashMapRights["advisor"] = Triple("patarėjas", R.drawable.advisor, R.raw.advisor)
        hashMapRights["counterfeiting"] = Triple("klastotė", R.drawable.counterfeiting, R.raw.counterfeiting)
        hashMapRights["convicted"] = Triple("nuteistasis", R.drawable.convicted, R.raw.convicted)
        hashMapRights["contract"] = Triple("sutartis", R.drawable.contract, R.raw.contract)
        hashMapRights["judicial court"] = Triple("teismas", R.drawable.judicialcourt, R.raw.judicialcourt)
        hashMapRights["defendant"] = Triple("atsakovas", R.drawable.defendent, R.raw.defendent)
        hashMapRights["guilty"] = Triple("kaltas", R.drawable.guilty, R.raw.guilty)
        hashMapRights["judge"] = Triple("teisėjas", R.drawable.judge, R.raw.judge)
        hashMapRights["case"] = Triple("byla", R.drawable.case1, R.raw.case1)
        hashMapRights["jury"] = Triple("žiuri", R.drawable.jury, R.raw.jury)
        hashMapRights["action"] = Triple("ieškinys", R.drawable.action, R.raw.action)
        hashMapRights["arson"] = Triple("padegimas", R.drawable.arson, R.raw.arson)
        hashMapRights["parole"] = Triple("lygtinis paleidimas", R.drawable.parole, R.raw.parole)
        hashMapRights["prosecutor"] = Triple("prokuroras", R.drawable.prosecutor, R.raw.prosecuter)
        hashMapRights["to summarize"] = Triple("apibendrinti", R.drawable.summarize, R.raw.tosummarise)
        hashMapRights["sentence"] = Triple("nuosprendis", R.drawable.sentence, R.raw.sentence1)
        hashMapRights["mortgage"] = Triple("hipoteka", R.drawable.mortgage, R.raw.mortgage)
        hashMapRights["to arrest"] = Triple("areštuoti", R.drawable.arrested, R.raw.toarrest)
        hashMapRights["death penalty"] = Triple("mirties bausmė", R.drawable.deathpenalty, R.raw.deathpenalty)
        hashMapRights["criminal law"] = Triple("baudžiamasis įstatymas", R.drawable.criminallaw, R.raw.criminallaw)
        hashMapRights["defender"] = Triple("gynėjas", R.drawable.defender, R.raw.defender)
        hashMapRights["illegal"] = Triple("neteisėtas", R.drawable.illegal, R.raw.illegal)
        hashMapRights["innocent"] = Triple("nekaltas", R.drawable.innocent, R.raw.innocent)
        hashMapRights["crime"] = Triple("nusikaltimas", R.drawable.crime, R.raw.crime)
        hashMapRights["to testify"] = Triple("liudyti", R.drawable.totestify, R.raw.totestify)
        hashMapRights["murder"] = Triple("žmogžudystė", R.drawable.murder, R.raw.murder)
        hashMapRights["coercion"] = Triple("prievarta", R.drawable.coercion, R.raw.coercion)
        hashMapRights["negligence"] = Triple("aplaidumas", R.drawable.negligence, R.raw.negligence)
        hashMapRights["robbery"] = Triple("apiplėšimas", R.drawable.robbery, R.raw.robbery)
        hashMapRights["vandalism"] = Triple("vandalizmas", R.drawable.vandalism, R.raw.vandalism)
        hashMapRights["to fulfill"] = Triple("įvykdyti", R.drawable.tofulfill, R.raw.tofulfil)
        hashMapRights["legally"] = Triple("legaliai", R.drawable.legally, R.raw.legally)
        hashMapRights["amnesty"] = Triple("amnestija", R.drawable.amnesty, R.raw.amnesty)
        hashMapRights["to appeal"] = Triple("apskųsti", R.drawable.toappeal, R.raw.toappeal)
        hashMapRights["without laws"] = Triple("be įstatymų", R.drawable.withoutlaws, R.raw.withoutlaws)

        hashMapRights["rape"] = Triple("išžaginimas", R.drawable.rape, R.raw.rape)
        hashMapRights["attack"] = Triple("užpuolimas", R.drawable.attack, R.raw.attack)
        hashMapRights["to confirm"] = Triple("patvirtinti", R.drawable.confirm, R.raw.toconfirm)
        hashMapRights["security deposit"] = Triple("užstatas", R.drawable.securitydeposit, R.raw.securitydeposit)
        hashMapRights["be under house arrest"] = Triple("būti namų arešte", R.drawable.housearrest, R.raw.beunderhousearrest)
        hashMapRights["bankruptcy"] = Triple("bankrotas", R.drawable.bankruptcy, R.raw.bankruptacy)
        hashMapRights["corruption"] = Triple("korupcija", R.drawable.corruption, R.raw.corruption)
        hashMapRights["expense account"] = Triple("išlaidų sąskaita", R.drawable.expenseaccount, R.raw.expenseaccount)
        hashMapRights["bonds"] = Triple("obligacijos", R.drawable.bonds, R.raw.bonds)
        hashMapRights["tax"] = Triple("mokestis", R.drawable.tax, R.raw.tax)
        hashMapRights["child abuse"] = Triple("prievartą prieš vaiką", R.drawable.childabuse, R.raw.childabuse)
        hashMapRights["foster children"] = Triple("globojami vaikai", R.drawable.fosterchildren, R.raw.fosterchildren)
        hashMapRights["danger"] = Triple("pavojus", R.drawable.danger, R.raw.danger)
    }
}